# =================================================================
# PRODUCTION ENVIRONMENT VARIABLES
# Toyota Virtual Training Session Admin
# =================================================================
#
# INSTRUCTIONS:
# 1. Copy this file: cp env.production.template .env
# 2. Fill in all required values (marked with **REQUIRED**)
# 3. NEVER commit .env to git
# 4. Keep this file secure - it contains sensitive credentials
#
# =================================================================

# =================================================================
# DJANGO CORE SETTINGS
# =================================================================

# **REQUIRED** Generate a new secret key for production
# Generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-unique-secret-key-min-50-chars-long-random-string

# **REQUIRED** Set to False in production
DEBUG=False

# **REQUIRED** Add your production domain(s)
# Separate multiple domains with commas
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com,.onrender.com,.herokuapp.com

# Django Settings Module
DJANGO_SETTINGS_MODULE=toyota_training.settings_production

# =================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =================================================================
#
# Choose ONE of the following methods:
#
# METHOD 1: DATABASE_URL (Recommended for Heroku, Render, Railway)
# Format: postgres://username:password@hostname:port/database_name
DATABASE_URL=postgres://user:password@hostname:5432/dbname
#
# METHOD 2: Individual Variables (Alternative)
# DB_NAME=toyota_training_prod
# DB_USER=toyota_user
# DB_PASSWORD=your_secure_password_here
# DB_HOST=your-database-host.com
# DB_PORT=5432
# DB_SSLMODE=require  # Options: disable, allow, prefer, require, verify-ca, verify-full
#
# =================================================================

# =================================================================
# CLOUDINARY (Media File Storage)
# =================================================================
# Get these from: https://cloudinary.com/console

CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret

# =================================================================
# EMAIL CONFIGURATION (Optional but Recommended)
# =================================================================

# Email Backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP Server Settings
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-specific-password
DEFAULT_FROM_EMAIL=noreply@yourdomain.com

# =================================================================
# SECURITY & MONITORING
# =================================================================

# CSRF Trusted Origins (for your domain)
# Separate multiple origins with commas
CSRF_TRUSTED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Sentry Error Tracking (Optional)
# Get from: https://sentry.io
# SENTRY_DSN=https://xxxxx@sentry.io/xxxxx

# =================================================================
# OPTIONAL: REDIS CACHE (Recommended for Production)
# =================================================================
# If using Redis for caching (improves performance)
# REDIS_URL=redis://127.0.0.1:6379/1
# REDIS_URL=redis://:password@hostname:6379/0  # For cloud Redis

# =================================================================
# OPTIONAL: AWS S3 STORAGE
# =================================================================
# If using S3 instead of Cloudinary for media files
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_STORAGE_BUCKET_NAME=your-bucket-name
# AWS_S3_REGION_NAME=us-east-1
# AWS_S3_CUSTOM_DOMAIN=your-bucket-name.s3.amazonaws.com

# =================================================================
# HOSTING PLATFORM SPECIFIC
# =================================================================

# Render
# RENDER_EXTERNAL_HOSTNAME will be set automatically by Render

# Heroku
# Heroku automatically sets DATABASE_URL and PORT

# Port (usually set automatically by platform)
# PORT=8000

# =================================================================
# PERFORMANCE TUNING
# =================================================================

# Gunicorn Workers (recommended: 2-4 x NUM_CORES)
# WEB_CONCURRENCY=2

# Database Connection Pool Size
# DB_POOL_SIZE=5

# =================================================================
# LOGGING
# =================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =================================================================
# CUSTOM SETTINGS (Application Specific)
# =================================================================

# Session Timeout (in seconds)
# SESSION_COOKIE_AGE=3600  # 1 hour

# Maximum file upload size (in bytes)
# FILE_UPLOAD_MAX_MEMORY_SIZE=5242880  # 5MB
# DATA_UPLOAD_MAX_MEMORY_SIZE=10485760  # 10MB

# =================================================================
# NOTES:
# =================================================================
# 
# 1. Required Variables:
#    - SECRET_KEY (must be unique for production)
#    - DEBUG (must be False)
#    - ALLOWED_HOSTS (must include your domain)
#    - DATABASE_URL or DB_* variables (PostgreSQL required)
#    - CLOUDINARY_* variables (for media file storage)
#
# 2. Security Checklist:
#    ✓ Changed SECRET_KEY from default
#    ✓ Set DEBUG=False
#    ✓ Configured ALLOWED_HOSTS
#    ✓ Using PostgreSQL (not SQLite)
#    ✓ Using HTTPS (handled by hosting platform)
#    ✓ Configured CSRF_TRUSTED_ORIGINS
#    ✓ Using strong database password
#    ✓ Media files on cloud storage (Cloudinary/S3)
#
# 3. Performance Recommendations:
#    ✓ Use Redis for caching (optional but recommended)
#    ✓ Configure appropriate number of Gunicorn workers
#    ✓ Enable database connection pooling
#    ✓ Use CDN for static files
#
# 4. Monitoring Recommendations:
#    ✓ Set up Sentry for error tracking
#    ✓ Configure application logging
#    ✓ Set up database backup automation
#    ✓ Enable health check endpoints
#
# =================================================================

